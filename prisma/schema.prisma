model Booking {
  id              Int      @id @default(autoincrement())
  fullName        String
  email           String
  phone           String
  doctor          String
  service         String
  preferredDate   DateTime
  preferredTime   String
  consultationType String
  message         String?
  consent         Boolean
  status          String   @default("pending")
  createdAt       DateTime @default(now())
}
model Dentist {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  specialty     String?
  imageUrl      String?
  bio           String?
  qualifications String[] @default([])
  availability  Json?    // { mon: ["09:00-12:00", ...], tue: [...], ... }
  createdAt     DateTime @default(now())
}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  clerkId   String   @unique
  email     String   @unique
  fullName  String
  imageUrl  String?
  createdAt DateTime @default(now())
}

model Chat {
  id           Int      @id @default(autoincrement())
  doctorId     Int
  patientEmail String
  createdAt    DateTime @default(now())
  messages     Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  sender    String   // "doctor" or "patient"
  content   String?
  imageUrl  String?  // Optional image URL for image messages
  imagePublicId String? // Cloudinary public_id for deletion
  createdAt DateTime @default(now())
  isRead    Boolean  @default(false)
  chat      Chat     @relation(fields: [chatId], references: [id])
}
